name: Build and release
on: [push, pull_request]
env:
  GITHUB_TOKEN: ${{ github.token }}
jobs:
  lint:
    name: Lint using rustfmt and clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Lint
        run: cargo clippy -- -D warnings

  release-matrix:
    name: Build for ${{ matrix.platform.os-name }}
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: Linux x86_64
            runs-on: ubuntu-22.04
            target: x86_64-unknown-linux-musl
          - os-name: Windows x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: macOS x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
          - os-name: macOS aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: stable
          args:
            "--locked --release"
          strip: true
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: watermark-printer
          target: ${{ matrix.platform.target }}
          extra-files: |
            README.md
            LICENSE.md
          changes-file: "CHANGELOG.md"
